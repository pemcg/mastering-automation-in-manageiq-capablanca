[[introduction-to-manageiq]]
:numbered:
== Introduction to ManageIQ

Welcome to this guide to mastering the Automate feature of ManageIQ. Before we begin our journey through Automate, it's worth taking a general tour of ManageIQ to establish a context for all that we'll be learning.

=== What is ManageIQ?

ManageIQ is a _cloud management platform_, that is also rather good at managing traditional server virtualization products such as VMware vSphere or oVirt. This broad capability makes it ideal as a _hybrid_ cloud manager, able to manage both public clouds, and on-premise private clouds and virtual infrastructures. It provides a single management interface into a hybrid environment, enabling cross-platform orchestration to be achieved with relative simplicity.

Although originally a virtualization and _Infrastructure as a Service_ (IaaS) cloud manager, ManageIQ _Capablanca_ introduced support for Docker Container management, including Red Hat's OpenShift Enterprise 3.x _Platform as a Service_ (PaaS) cloud solution.

.Requirements of a Cloud Management Platform
****
Cloud management platforms (CMPs) are software tools that allow for the integrated management of public, private and hybrid cloud environments. There are several requirements that are generally considered necessary for a product to be classified as a cloud management platform. These are:

* Self-service catalog-based ordering of services
* Metering and billing of cloud workloads
* Policy-based workload optimisation and management
* Workflow orchestration and automation
* The capability to integrate with external tools and systems
* Role-based access control (RBAC) and multitenancy
****

=== Providers

ManageIQ manages each cloud, container or virtual environment using modular subcomponents called _providers_. Each provider contains the functionality required to connect to and monitor its specific target platform, and this provider specialization enables common cloud management functionality to be abstracted into the core product. In keeping with the _manager of managers_ concept, ManageIQ providers communicate with their respective underlying cloud or infrastructure platform using the native APIs published for the platform manager (such as VMware vCenter Server using the vSphere SOAP API).

The pluggable nature of the provider architecture makes it relatively straightforward  to develop new providers to support additional cloud and infrastructure platforms. For example the last two versions of ManageIQ have added five new providers, with more currently under development.

Providers are broadly divided into categories, and with ManageIQ _Capablanca_ these are _Cloud_, _Infrastructure_, _Configuration Management_ and _Container_.

==== Cloud Providers

ManageIQ _Capablanca_ ships with cloud providers that connect to and manage two _public_ clouds; Amazon Web Services, and Microsoft Azure. It also has a cloud provider that can connect to and manage a _private_ or _on-premise_ Red Hat OpenStack Platform (OSP) cloud (this is the _OverCloud_ in the case that OSP is managed by the Red Hat OpenStack Platform 7 Director).

==== Infrastructure Providers

ManageIQ _Capablanca_ ships with infrastructure providers that connect to and manage VMware vCenter Server, Red Hat Enterprise Virtualization Manager, and Microsoft System Center Virtual Machine Manager. It also has an infrastructure provider that can connect to and manage a _private_ or _on-premise_ Red Hat OpenStack Platform 7 Director _UnderCloud_.

==== Configuration Management Providers

ManageIQ _Capablanca_ ships with a Configuration Management provider that can connect to and manage Foreman. This enables ManageIQ to import and use Foreman _Host Groups_, and extends the provisioning capability to include _bare-metal_ (i.e. nonvirtual) servers.

==== Container Providers

ManageIQ _Capablanca_ ships with Container providers that can connect to and manage three Docker container managers; Atomic, Kubernetes and OpenShift.

==== Mixing and Matching Providers

When deploying ManageIQ in our enterprise we often connect to several providers. We can illustrate this with an example company.

===== Company XYZ Inc.

Our example organization has an established VMware vSphere 5.5 virtual environment, containing many hundreds of virtual machines. This virtual infrastructure is typically used for the stable, long-lived virtual machines, and many of the organisation's critical database, directory services and file servers are situated here. Approximately half of the VMware virtual machines run Red Hat Enterprise Linux footnote:[It is worth noting that ManageIQ is virtual machine operating system neutral; it can manage Windows, Red Hat, Fedora, Debian, Ubuntu or SUSE VMs (or their derivatives) with equal ease], and to facilitate the patching, updating, and configuration management of these VMs, the organization has a Satellite 6 server.

Company XYZ is a large producer of several varieties of widget, and the widget development test cycle involves creating many short-lived instances in an OpenStack _private_ cloud, to cycle through the test suites. The developers like to have a service catalog from which they can order one of the many widget test environments, and at any time there may be several hundred instances running various test configurations.

The web developers in the company are in the process of redeveloping the main Internet web portal as a scalable _public_ cloud workload hosted in Amazon Web Services (AWS). The web portal provides a rich product catalogue, online documentation, knowlegebase and ecommerce shopping area to customers.

In this organization, ManageIQ manages the workflows that provision virtual machines into the vSphere virtual infrastructure, Amazon Web Services, and OpenStack. The users have a self-service catalog to provision individual virtual machine workloads into either VMware or Amazon, or entire test suites into OpenStack. ManageIQ orchestration workflows help with the maintenance of an _image factory_ that keeps virtual machine images updated and published as VMware templates, Amazon Machine Images (AMIs) and OpenStack _Glance_ images.

As part of the provisoning process ManageIQ also manages the integration workflows that allow newly provisoned virtual machines to be automatically registered with the Satellite 6 server, and an in-house Configuration Management Database. This ensures that newly provisioned virtual machines are configured by Puppet according to server role, patched with the latest updates, with a full inventory visible to the help-desk system.

[[c1i2]]
.ManageIQ providers and workflows
image::part1/chapter1/images/manageiq_rich_picture.png[Rich Picture,460,align="center"]

=== The Capabilities of ManageIQ

We've already mentioned some of the capabilities of ManageIQ such as _orchestration_, a _service catalog_, and _integration workflows_. Let's have a look at the four main areas of capability: Insight, Control, Automate and Integrate.

==== Insight

_Insight_ is the process of gathering intelligence on our virtual or cloud infrastructure, so that we can  manage it effectively. It is one of the most fundamental but important capabilities of the product.

When we first connect a provider, ManageIQ begins a process of _discovery_ of the virtual or cloud infrastructure. An infrastructure provider will collect and maintain details of the entire virtual infrastructure, including clusters, hypervisors, datastores, virtual machines, and the relationships between each of them. Cloud vendors do not typically expose infrastructure details, so cloud providers will typically gather and monitor tenant-specific information on cloud components such as instances, images, availability zones, networks, and security groups.

ManageIQ also stores and processes any real-time or historical performance data that the provider exposes. It uses the historical data to calculate useful trend-based analytics such as image or VM right-sizing suggestions, and capacity planning recommendations. It uses the real-time performance statistics and power-on/off events to give us insight into workload utilisation, and also uses this information to calculate metering and chargeback costs.

One of the roles of a ManageIQ server is that of _Smart Proxy_. A server with this role has the ability to initiate a _SmartState Analysis_ on a virtual machine, template, instance, or even Docker container. SmartState Analysis (also known as _fleecing_) is a patented technology that scans the container or virtual machine's disk image to examine its contents. The scan discovers users and groups that have been added,  applications that have been installed, and searches for and optionally retrieves the contents of specified configuration files or Windows Registry settings. This is an agentless operation that doesn't require the virtual machine to be powered on.

ManageIQ allows us to apply tags to infrastructure or cloud components to help us identify and classify our workloads or resources in a way that makes sense to our organisation. These tags might specify an owning department, cost centre, operating system type, location, or workload classification for example. We can create powerful filters in the WebUI that allow us to display managed components such as VMs along organisational and business lines, rather than physical placement or characteristic.

To round off the summary of its insight ability, ManageIQ also has a powerful reporting capability that can be used to create online or exportable CSV or PDF reports.

==== Control

We can use the _Control_ functionality of ManageIQ to enforce security and configuration policies, using the information retrieved from Insight. For example the SmartState Analysis of a virtual machine might discover a software package containing a known critical security vulnerability. We could implement a Control Policy to shut down the VM, or migrate it to a hypervisor in a quarantined network so that it can be patched.

Using real-time performance statistics we might configure alerts to warn us when critical virtual machines are running at unusually high utilisation levels. Many monitoring tools can do this, but with ManageIQ we could also use such an alert to trigger an Automate workflow to dynamically scale-out the application workload by provisioning more servers.

We can monitor for compliance with corporate security policies, by gathering and intelligently processing the contents of selected configuration files. In this way we might detect if SELinux has been disabled for example, or that sshd is running with an insecure configuration. We can run such compliance rules automatically, and mark a virtual machine as _noncompliant_, whereupon its status will be immediately visible in the WebUI.

==== Automate

One of the most powerful features of ManageIQ is its ability to _Automate_ the orchestration of workloads and resources in our virtual infrastructure or cloud. Automate allows us to create and use powerful workflows using the Ruby scripting language, and using features provided by the _Automation Engine_ such as _State Machines_ and _Service Models_.

ManageIQ comes preconfigured with a large number of out-of-the-box workflows, to orchestrate such things as:

* Provisioning or scaling out of _workloads_, such as virtual machines or cloud instances
* Provisioning or scaling out of _infrastructure_, such as bare-metal hypervisors or _compute nodes_
* Scaling back or retirement of virtual machine or cloud instances

Each of these is done in the context of comprehensive role-based access control (RBAC), with administrator-level approval of selected Automate operations required where appropriate.

We can extend or enhance these default workflows and create whole new orchestration workflows to meet our specific requirements

===== Service Catalog

We can create self-service catalogs to permit users to order our orchestration workflows with a single button click. ManageIQ Automate comes with an interactive service dialog designer that we use to build rich dialogs, containing _elements_ such as text boxes, radio buttons or drop-down lists. These elements can be dynamically prepopulated with values that are specific and relevant to the logged-in user or workload being ordered.

==== Integrate

As an extension of its Automate capability, ManageIQ is able to connect to and _Integrate_ with many Enterprise tools and systems. The system comes with Ruby Gems to enable automation scripts to connect to both RESTful and SOAP APIs, as well as libraries to connect to several SQL and LDAP databases, and the ability to run remote PowerShell scripts on Windows servers.

Typical integration actions might be to extend the virtual machine provisioning workflow to retrieve and use an IP address from a corporate IP address management (IPAM) solution; to create a new Configuration Item (CI) record in the central configuration management database (CMDB), or to create and update tickets in the enterprise service management tool, such as ServiceNow.

=== The ManageIQ Appliance

To simplify installation, ManageIQ is distributed as a fully installed virtual machine, often just referred to as _Appliance_ for convenience.

A ManageIQ _Capablanca_ appliance comes preconfigured with everything we need. It runs CentOS 7.2, with PostgreSQL 9.4, Rails 4.2.5, the ManageIQ application, and all associated Ruby gems installed. An appliance is downloadable as a virtual machine image template in formats suitable for VMware, oVirt/Red Hat Enterprise Virtualization, OpenStack or Microsoft System Center Virtual Machine Manager. 

==== Ruby and Rails

ManageIQ is a Ruby on Rails application, that uses PostgreSQL as its database. When we use the Automate functionality of ManageIQ we work extensively with the Ruby language, and write scripts that interact with a Ruby object model defined for us by the Automation Engine. We certainly don't need to be Rails developers however (we don't really _need_ to know anything about Rails), but as we'll see in <<peeping-under-the-hood>>, some understanding of Rails concepts can make it easier to understand the object model, and what happens behind the scenes when we run our scripts.

[NOTE]
Why Rails? Ruby on Rails is a powerful development framework for database-centric web-based applications. It is popular for open source product development, for example _Foreman_, one of the core components of Red Hat's _Satellite 6.x_ product, is also a Rails application.

=== Projects, Products and Some History

Red Hat is an open source company, and its _products_ are derived from one or more "upstream" Open Source _projects_. ManageIQ is the upstream project for Red Hat CloudForms.

==== ManageIQ (the _Project_)

The ManageIQ project releases a new version every six months (approximately). Each version is named alphabetically after a chess Grand Master, and so far these have been Anand, Botvinnik and Capablanca. At the time of writing, Capablanca is the current release.

==== Red Hat CloudForms (the _Product_)

Red Hat CloudForms 1.0 was originally a suite of products comprising CloudForms System Engine, CloudForms Cloud Engine and CloudForms Config Server, each with its own upstream project. 

When Red Hat acquired ManageIQ (a privately-held company) in late 2012, it decided to discontinue development of the original CloudForms 1.0 projects footnote:[CloudForms System Engine didn't completely disappear. It was based on the upstream _Katello_ project, which now forms a core part of Red Hat's Satellite 6.x product], and base a new version, CloudForms 2.0, on the much more capable and mature ManageIQ Enterprise Virtualization Manager (EVM) 5.x product. EVM 5.1 was re-branded as CloudForms Management Engine 5.1.

It took Red Hat approximately 18 months from the time of the ManageIQ acquisition to make the source code ready to publish as an Open Source project. Once completed, the ManageIQ project was formed and development was started on the _Anand_ release. 

==== CloudForms Management Engine (the _Appliance_)

_CloudForms Management Engine_ is the name of the CloudForms virtual appliance that we download from redhat.com. The most recent versions of CloudForms Management Engine have been based on corresponding ManageIQ project releases. The relative versions and releases are summarised in the following table:

.Summary of the Relative Project and Product Versions
[options="header"]
|=======
|ManageIQ project release|CloudForms Management Engine version|CloudForms version
||5.1|2.0
||5.2|3.0
|Anand|5.3|3.1
|Botvinnik|5.4|3.2
|Capablanca|5.5|4.0
|=======

=== Summary

This chapter has introduced ManageIQ at a fairly high level, but has hopefully established a product context in the mind of the reader. The remainder of the book focuses specifically on the Automate functionality of ManageIQ. Let's roll up our sleeves and get started!

==== Further Reading

https://www.redhat.com/en/technologies/cloud-computing/cloudforms[Red Hat CloudForms]

https://allthingsopen.com/2015/04/09/a-technical-overview-of-red-hat-cloud-infrastructure-rhci/[A Technical Overview of Red Hat Cloud Infrastructure (RHCI)]

https://www.forrester.com/report/The+Forrester+Wave+Hybrid+Cloud+Management+Solutions+Q1+2016/-/E-RES122813[The Forrester Wave™: Hybrid Cloud Management Solutions, Q1 2016]

https://github.com/ManageIQ/guides/blob/master/architecture/providers_overview.md[ManageIQ Architecture Guides - Provider Overview]